/*----- PROTECTED REGION ID(SpecBoardInterfaceStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        SpecBoardInterfaceStateMachine.cpp
//
// description : State machine file for the SpecBoardInterface class
//
// project :     Simple PCI FMC Carrier (SPEC) Tango DS interface
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <SpecBoardInterface.h>

/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::SpecBoardInterfaceStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================
//  ON      |  The SPEC board is accessed. Commands are able to be executed.
//  FAULT   |  The SPEC board can not be accessed. Not found.
//  ALARM   |  The SPEC is accessed. But some commands failed.


namespace SpecBoardInterface_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_barArea_allowed()
 *	Description : Execution allowed for barArea attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_barArea_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for barArea attribute in Write access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::barAreaStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::barAreaStateAllowed_WRITE

	//	Not any excluded states for barArea attribute in read access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::barAreaStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::barAreaStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_bitfile_allowed()
 *	Description : Execution allowed for bitfile attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_bitfile_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for bitfile attribute in Write access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::bitfileStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::bitfileStateAllowed_WRITE

	//	Not any excluded states for bitfile attribute in read access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::bitfileStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::bitfileStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_readAddress_allowed()
 *	Description : Execution allowed for readAddress attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_readAddress_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for readAddress attribute in Write access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::readAddressStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::readAddressStateAllowed_WRITE

	//	Not any excluded states for readAddress attribute in read access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::readAddressStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::readAddressStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_writeAddress_allowed()
 *	Description : Execution allowed for writeAddress attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_writeAddress_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for writeAddress attribute in Write access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::writeAddressStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::writeAddressStateAllowed_WRITE

	//	Not any excluded states for writeAddress attribute in read access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::writeAddressStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::writeAddressStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_readValue_allowed()
 *	Description : Execution allowed for readValue attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_readValue_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for readValue attribute in read access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::readValueStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::readValueStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_writeValue_allowed()
 *	Description : Execution allowed for writeValue attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_writeValue_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for writeValue attribute in Write access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::writeValueStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::writeValueStateAllowed_WRITE

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_sizeReadBlock_allowed()
 *	Description : Execution allowed for sizeReadBlock attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_sizeReadBlock_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for sizeReadBlock attribute in Write access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::sizeReadBlockStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::sizeReadBlockStateAllowed_WRITE

	//	Not any excluded states for sizeReadBlock attribute in read access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::sizeReadBlockStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::sizeReadBlockStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_readRegisterBlock_allowed()
 *	Description : Execution allowed for readRegisterBlock attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_readRegisterBlock_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for readRegisterBlock attribute in read access.
	/*----- PROTECTED REGION ID(SpecBoardInterface::readRegisterBlockStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::readRegisterBlockStateAllowed_READ
	return true;
}

//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_ReadRegister_allowed()
 *	Description : Execution allowed for ReadRegister attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_ReadRegister_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for ReadRegister command.
	/*----- PROTECTED REGION ID(SpecBoardInterface::ReadRegisterStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::ReadRegisterStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_ReadRegisterBlock_allowed()
 *	Description : Execution allowed for ReadRegisterBlock attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_ReadRegisterBlock_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for ReadRegisterBlock command.
	/*----- PROTECTED REGION ID(SpecBoardInterface::ReadRegisterBlockStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::ReadRegisterBlockStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_WriteRegister_allowed()
 *	Description : Execution allowed for WriteRegister attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_WriteRegister_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for WriteRegister command.
	/*----- PROTECTED REGION ID(SpecBoardInterface::WriteRegisterStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::WriteRegisterStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : SpecBoardInterface::is_LoadBitstream_allowed()
 *	Description : Execution allowed for LoadBitstream attribute
 */
//--------------------------------------------------------
bool SpecBoardInterface::is_LoadBitstream_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for LoadBitstream command.
	/*----- PROTECTED REGION ID(SpecBoardInterface::LoadBitstreamStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	SpecBoardInterface::LoadBitstreamStateAllowed
	return true;
}

}	//	End of namespace
